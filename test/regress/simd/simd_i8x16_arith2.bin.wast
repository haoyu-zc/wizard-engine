(module binary
  "\00\61\73\6d\01\00\00\00\01\90\80\80\80\00\03\60"
  "\02\7b\7b\01\7b\60\01\7b\01\7b\60\00\01\7b\03\9e"
  "\80\80\80\00\1d\00\00\00\00\00\01\01\02\02\02\02"
  "\02\02\02\02\02\02\02\02\01\01\01\01\01\01\01\01"
  "\01\01\07\c4\85\80\80\00\1d\0b\69\38\78\31\36\2e"
  "\6d\69\6e\5f\73\00\00\0b\69\38\78\31\36\2e\6d\69"
  "\6e\5f\75\00\01\0b\69\38\78\31\36\2e\6d\61\78\5f"
  "\73\00\02\0b\69\38\78\31\36\2e\6d\61\78\5f\75\00"
  "\03\0c\69\38\78\31\36\2e\61\76\67\72\5f\75\00\04"
  "\09\69\38\78\31\36\2e\61\62\73\00\05\0c\69\38\78"
  "\31\36\2e\70\6f\70\63\6e\74\00\06\18\69\38\78\31"
  "\36\2e\6d\69\6e\5f\73\5f\77\69\74\68\5f\63\6f\6e"
  "\73\74\5f\30\00\07\18\69\38\78\31\36\2e\6d\69\6e"
  "\5f\73\5f\77\69\74\68\5f\63\6f\6e\73\74\5f\31\00"
  "\08\18\69\38\78\31\36\2e\6d\69\6e\5f\75\5f\77\69"
  "\74\68\5f\63\6f\6e\73\74\5f\32\00\09\18\69\38\78"
  "\31\36\2e\6d\69\6e\5f\75\5f\77\69\74\68\5f\63\6f"
  "\6e\73\74\5f\33\00\0a\18\69\38\78\31\36\2e\6d\61"
  "\78\5f\73\5f\77\69\74\68\5f\63\6f\6e\73\74\5f\34"
  "\00\0b\18\69\38\78\31\36\2e\6d\61\78\5f\73\5f\77"
  "\69\74\68\5f\63\6f\6e\73\74\5f\35\00\0c\18\69\38"
  "\78\31\36\2e\6d\61\78\5f\75\5f\77\69\74\68\5f\63"
  "\6f\6e\73\74\5f\36\00\0d\18\69\38\78\31\36\2e\6d"
  "\61\78\5f\75\5f\77\69\74\68\5f\63\6f\6e\73\74\5f"
  "\37\00\0e\19\69\38\78\31\36\2e\61\76\67\72\5f\75"
  "\5f\77\69\74\68\5f\63\6f\6e\73\74\5f\38\00\0f\19"
  "\69\38\78\31\36\2e\61\76\67\72\5f\75\5f\77\69\74"
  "\68\5f\63\6f\6e\73\74\5f\39\00\10\17\69\38\78\31"
  "\36\2e\61\62\73\5f\77\69\74\68\5f\63\6f\6e\73\74"
  "\5f\31\30\00\11\1a\69\38\78\31\36\2e\70\6f\70\63"
  "\6e\74\5f\77\69\74\68\5f\63\6f\6e\73\74\5f\31\31"
  "\00\12\19\69\38\78\31\36\2e\6d\69\6e\5f\73\5f\77"
  "\69\74\68\5f\63\6f\6e\73\74\5f\31\32\00\13\19\69"
  "\38\78\31\36\2e\6d\69\6e\5f\73\5f\77\69\74\68\5f"
  "\63\6f\6e\73\74\5f\31\33\00\14\19\69\38\78\31\36"
  "\2e\6d\69\6e\5f\75\5f\77\69\74\68\5f\63\6f\6e\73"
  "\74\5f\31\34\00\15\19\69\38\78\31\36\2e\6d\69\6e"
  "\5f\75\5f\77\69\74\68\5f\63\6f\6e\73\74\5f\31\35"
  "\00\16\19\69\38\78\31\36\2e\6d\61\78\5f\73\5f\77"
  "\69\74\68\5f\63\6f\6e\73\74\5f\31\36\00\17\19\69"
  "\38\78\31\36\2e\6d\61\78\5f\73\5f\77\69\74\68\5f"
  "\63\6f\6e\73\74\5f\31\37\00\18\19\69\38\78\31\36"
  "\2e\6d\61\78\5f\75\5f\77\69\74\68\5f\63\6f\6e\73"
  "\74\5f\31\38\00\19\19\69\38\78\31\36\2e\6d\61\78"
  "\5f\75\5f\77\69\74\68\5f\63\6f\6e\73\74\5f\31\39"
  "\00\1a\1a\69\38\78\31\36\2e\61\76\67\72\5f\75\5f"
  "\77\69\74\68\5f\63\6f\6e\73\74\5f\32\30\00\1b\1a"
  "\69\38\78\31\36\2e\61\76\67\72\5f\75\5f\77\69\74"
  "\68\5f\63\6f\6e\73\74\5f\32\31\00\1c\0a\f2\86\80"
  "\80\00\1d\88\80\80\80\00\00\20\00\20\01\fd\76\0b"
  "\88\80\80\80\00\00\20\00\20\01\fd\77\0b\88\80\80"
  "\80\00\00\20\00\20\01\fd\78\0b\88\80\80\80\00\00"
  "\20\00\20\01\fd\79\0b\88\80\80\80\00\00\20\00\20"
  "\01\fd\7b\0b\86\80\80\80\00\00\20\00\fd\60\0b\86"
  "\80\80\80\00\00\20\00\fd\62\0b\a8\80\80\80\00\00"
  "\fd\0c\80\80\80\80\7f\7f\7f\7f\40\40\40\40\ff\ff"
  "\ff\ff\fd\0c\ff\ff\ff\ff\40\40\40\40\7f\7f\7f\7f"
  "\80\80\80\80\fd\76\0b\a8\80\80\80\00\00\fd\0c\00"
  "\00\00\00\01\01\01\01\02\02\02\02\03\03\03\03\fd"
  "\0c\03\03\03\03\02\02\02\02\01\01\01\01\00\00\00"
  "\00\fd\76\0b\a8\80\80\80\00\00\fd\0c\80\80\80\80"
  "\7f\7f\7f\7f\40\40\40\40\ff\ff\ff\ff\fd\0c\ff\ff"
  "\ff\ff\40\40\40\40\7f\7f\7f\7f\80\80\80\80\fd\77"
  "\0b\a8\80\80\80\00\00\fd\0c\00\00\00\00\01\01\01"
  "\01\02\02\02\02\03\03\03\03\fd\0c\03\03\03\03\02"
  "\02\02\02\01\01\01\01\00\00\00\00\fd\77\0b\a8\80"
  "\80\80\00\00\fd\0c\80\80\80\80\7f\7f\7f\7f\40\40"
  "\40\40\ff\ff\ff\ff\fd\0c\ff\ff\ff\ff\40\40\40\40"
  "\7f\7f\7f\7f\80\80\80\80\fd\78\0b\a8\80\80\80\00"
  "\00\fd\0c\00\00\00\00\01\01\01\01\02\02\02\02\03"
  "\03\03\03\fd\0c\03\03\03\03\02\02\02\02\01\01\01"
  "\01\00\00\00\00\fd\78\0b\a8\80\80\80\00\00\fd\0c"
  "\80\80\80\80\7f\7f\7f\7f\40\40\40\40\ff\ff\ff\ff"
  "\fd\0c\ff\ff\ff\ff\40\40\40\40\7f\7f\7f\7f\80\80"
  "\80\80\fd\79\0b\a8\80\80\80\00\00\fd\0c\00\00\00"
  "\00\01\01\01\01\02\02\02\02\03\03\03\03\fd\0c\03"
  "\03\03\03\02\02\02\02\01\01\01\01\00\00\00\00\fd"
  "\79\0b\a8\80\80\80\00\00\fd\0c\80\80\80\80\7f\7f"
  "\7f\7f\40\40\40\40\ff\ff\ff\ff\fd\0c\ff\ff\ff\ff"
  "\40\40\40\40\7f\7f\7f\7f\80\80\80\80\fd\7b\0b\a8"
  "\80\80\80\00\00\fd\0c\00\00\00\00\01\01\01\01\02"
  "\02\02\02\03\03\03\03\fd\0c\03\03\03\03\02\02\02"
  "\02\01\01\01\01\00\00\00\00\fd\7b\0b\96\80\80\80"
  "\00\00\fd\0c\80\80\80\80\7f\7f\7f\7f\40\40\40\40"
  "\ff\ff\ff\ff\fd\60\0b\96\80\80\80\00\00\fd\0c\80"
  "\80\80\80\7f\7f\7f\7f\40\40\40\40\ff\ff\ff\ff\fd"
  "\62\0b\98\80\80\80\00\00\20\00\fd\0c\80\80\80\80"
  "\7f\7f\7f\7f\40\40\40\40\ff\ff\ff\ff\fd\76\0b\98"
  "\80\80\80\00\00\20\00\fd\0c\00\00\00\00\01\01\01"
  "\01\02\02\02\02\03\03\03\03\fd\76\0b\98\80\80\80"
  "\00\00\20\00\fd\0c\80\80\80\80\7f\7f\7f\7f\40\40"
  "\40\40\ff\ff\ff\ff\fd\77\0b\98\80\80\80\00\00\20"
  "\00\fd\0c\00\00\00\00\01\01\01\01\02\02\02\02\03"
  "\03\03\03\fd\77\0b\98\80\80\80\00\00\20\00\fd\0c"
  "\80\80\80\80\7f\7f\7f\7f\40\40\40\40\ff\ff\ff\ff"
  "\fd\78\0b\98\80\80\80\00\00\20\00\fd\0c\00\00\00"
  "\00\01\01\01\01\02\02\02\02\03\03\03\03\fd\78\0b"
  "\98\80\80\80\00\00\20\00\fd\0c\80\80\80\80\7f\7f"
  "\7f\7f\40\40\40\40\ff\ff\ff\ff\fd\79\0b\98\80\80"
  "\80\00\00\20\00\fd\0c\00\00\00\00\01\01\01\01\02"
  "\02\02\02\03\03\03\03\fd\79\0b\98\80\80\80\00\00"
  "\20\00\fd\0c\80\80\80\80\7f\7f\7f\7f\40\40\40\40"
  "\ff\ff\ff\ff\fd\7b\0b\98\80\80\80\00\00\20\00\fd"
  "\0c\00\00\00\00\01\01\01\01\02\02\02\02\03\03\03"
  "\03\fd\7b\0b"
)
(assert_return
  (invoke "i8x16.min_s"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0x0 0x0 0x0 0x0)
  )
  (v128.const i8x16
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
  )
)
(assert_return
  (invoke "i8x16.min_s"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i8x16
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
  )
)
(assert_return
  (invoke "i8x16.min_s"
    (v128.const i32x4 0x0 0x0 0xffff_ffff 0xffff_ffff)
    (v128.const i32x4 0x0 0xffff_ffff 0x0 0xffff_ffff)
  )
  (v128.const i8x16
    0x0
    0x0
    0x0
    0x0
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
  )
)
(assert_return
  (invoke "i8x16.min_s"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i8x16
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
  )
)
(assert_return
  (invoke "i8x16.min_s"
    (v128.const i32x4 0x101_0101 0x101_0101 0x101_0101 0x101_0101)
    (v128.const i32x4 0x101_0101 0x101_0101 0x101_0101 0x101_0101)
  )
  (v128.const i8x16
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
  )
)
(assert_return
  (invoke "i8x16.min_s"
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
    (v128.const i32x4 0x101_0101 0x101_0101 0x101_0101 0x101_0101)
  )
  (v128.const i8x16
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
  )
)
(assert_return
  (invoke "i8x16.min_s"
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
    (v128.const i32x4 0x8080_8080 0x8080_8080 0x8080_8080 0x8080_8080)
  )
  (v128.const i8x16
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
  )
)
(assert_return
  (invoke "i8x16.min_s"
    (v128.const i32x4 0x8080_8080 0x8080_8080 0x8080_8080 0x8080_8080)
    (v128.const i32x4 0x8080_8080 0x8080_8080 0x8080_8080 0x8080_8080)
  )
  (v128.const i8x16
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
  )
)
(assert_return
  (invoke "i8x16.min_s"
    (v128.const i32x4 0x8080_8080 0x8080_8080 0x8080_8080 0x8080_8080)
    (v128.const i32x4 0x8080_8080 0x8080_8080 0x8080_8080 0x8080_8080)
  )
  (v128.const i8x16
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
  )
)
(assert_return
  (invoke "i8x16.min_s"
    (v128.const i32x4 0x7b7b_7b7b 0x7b7b_7b7b 0x7b7b_7b7b 0x7b7b_7b7b)
    (v128.const i32x4 0x7b7b_7b7b 0x7b7b_7b7b 0x7b7b_7b7b 0x7b7b_7b7b)
  )
  (v128.const i8x16
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
  )
)
(assert_return
  (invoke "i8x16.min_s"
    (v128.const i32x4 0x8080_8080 0x8080_8080 0x8080_8080 0x8080_8080)
    (v128.const i32x4 0x8080_8080 0x8080_8080 0x8080_8080 0x8080_8080)
  )
  (v128.const i8x16
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
  )
)
(assert_return
  (invoke "i8x16.min_u"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0x0 0x0 0x0 0x0)
  )
  (v128.const i8x16
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
  )
)
(assert_return
  (invoke "i8x16.min_u"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i8x16
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
  )
)
(assert_return
  (invoke "i8x16.min_u"
    (v128.const i32x4 0x0 0x0 0xffff_ffff 0xffff_ffff)
    (v128.const i32x4 0x0 0xffff_ffff 0x0 0xffff_ffff)
  )
  (v128.const i8x16
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0xff
    0xff
    0xff
    0xff
  )
)
(assert_return
  (invoke "i8x16.min_u"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i8x16
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
  )
)
(assert_return
  (invoke "i8x16.min_u"
    (v128.const i32x4 0x101_0101 0x101_0101 0x101_0101 0x101_0101)
    (v128.const i32x4 0x101_0101 0x101_0101 0x101_0101 0x101_0101)
  )
  (v128.const i8x16
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
  )
)
(assert_return
  (invoke "i8x16.min_u"
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
    (v128.const i32x4 0x101_0101 0x101_0101 0x101_0101 0x101_0101)
  )
  (v128.const i8x16
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
  )
)
(assert_return
  (invoke "i8x16.min_u"
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
    (v128.const i32x4 0x8080_8080 0x8080_8080 0x8080_8080 0x8080_8080)
  )
  (v128.const i8x16
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
  )
)
(assert_return
  (invoke "i8x16.min_u"
    (v128.const i32x4 0x8080_8080 0x8080_8080 0x8080_8080 0x8080_8080)
    (v128.const i32x4 0x8080_8080 0x8080_8080 0x8080_8080 0x8080_8080)
  )
  (v128.const i8x16
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
  )
)
(assert_return
  (invoke "i8x16.min_u"
    (v128.const i32x4 0x8080_8080 0x8080_8080 0x8080_8080 0x8080_8080)
    (v128.const i32x4 0x8080_8080 0x8080_8080 0x8080_8080 0x8080_8080)
  )
  (v128.const i8x16
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
  )
)
(assert_return
  (invoke "i8x16.min_u"
    (v128.const i32x4 0x7b7b_7b7b 0x7b7b_7b7b 0x7b7b_7b7b 0x7b7b_7b7b)
    (v128.const i32x4 0x7b7b_7b7b 0x7b7b_7b7b 0x7b7b_7b7b 0x7b7b_7b7b)
  )
  (v128.const i8x16
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
  )
)
(assert_return
  (invoke "i8x16.min_u"
    (v128.const i32x4 0x8080_8080 0x8080_8080 0x8080_8080 0x8080_8080)
    (v128.const i32x4 0x8080_8080 0x8080_8080 0x8080_8080 0x8080_8080)
  )
  (v128.const i8x16
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
  )
)
(assert_return
  (invoke "i8x16.max_s"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0x0 0x0 0x0 0x0)
  )
  (v128.const i8x16
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
  )
)
(assert_return
  (invoke "i8x16.max_s"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i8x16
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
  )
)
(assert_return
  (invoke "i8x16.max_s"
    (v128.const i32x4 0x0 0x0 0xffff_ffff 0xffff_ffff)
    (v128.const i32x4 0x0 0xffff_ffff 0x0 0xffff_ffff)
  )
  (v128.const i8x16
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0xff
    0xff
    0xff
    0xff
  )
)
(assert_return
  (invoke "i8x16.max_s"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i8x16
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
  )
)
(assert_return
  (invoke "i8x16.max_s"
    (v128.const i32x4 0x101_0101 0x101_0101 0x101_0101 0x101_0101)
    (v128.const i32x4 0x101_0101 0x101_0101 0x101_0101 0x101_0101)
  )
  (v128.const i8x16
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
  )
)
(assert_return
  (invoke "i8x16.max_s"
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
    (v128.const i32x4 0x101_0101 0x101_0101 0x101_0101 0x101_0101)
  )
  (v128.const i8x16
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
  )
)
(assert_return
  (invoke "i8x16.max_s"
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
    (v128.const i32x4 0x8080_8080 0x8080_8080 0x8080_8080 0x8080_8080)
  )
  (v128.const i8x16
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
  )
)
(assert_return
  (invoke "i8x16.max_s"
    (v128.const i32x4 0x8080_8080 0x8080_8080 0x8080_8080 0x8080_8080)
    (v128.const i32x4 0x8080_8080 0x8080_8080 0x8080_8080 0x8080_8080)
  )
  (v128.const i8x16
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
  )
)
(assert_return
  (invoke "i8x16.max_s"
    (v128.const i32x4 0x8080_8080 0x8080_8080 0x8080_8080 0x8080_8080)
    (v128.const i32x4 0x8080_8080 0x8080_8080 0x8080_8080 0x8080_8080)
  )
  (v128.const i8x16
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
  )
)
(assert_return
  (invoke "i8x16.max_s"
    (v128.const i32x4 0x7b7b_7b7b 0x7b7b_7b7b 0x7b7b_7b7b 0x7b7b_7b7b)
    (v128.const i32x4 0x7b7b_7b7b 0x7b7b_7b7b 0x7b7b_7b7b 0x7b7b_7b7b)
  )
  (v128.const i8x16
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
  )
)
(assert_return
  (invoke "i8x16.max_s"
    (v128.const i32x4 0x8080_8080 0x8080_8080 0x8080_8080 0x8080_8080)
    (v128.const i32x4 0x8080_8080 0x8080_8080 0x8080_8080 0x8080_8080)
  )
  (v128.const i8x16
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
  )
)
(assert_return
  (invoke "i8x16.max_u"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0x0 0x0 0x0 0x0)
  )
  (v128.const i8x16
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
  )
)
(assert_return
  (invoke "i8x16.max_u"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i8x16
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
  )
)
(assert_return
  (invoke "i8x16.max_u"
    (v128.const i32x4 0x0 0x0 0xffff_ffff 0xffff_ffff)
    (v128.const i32x4 0x0 0xffff_ffff 0x0 0xffff_ffff)
  )
  (v128.const i8x16
    0x0
    0x0
    0x0
    0x0
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
  )
)
(assert_return
  (invoke "i8x16.max_u"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i8x16
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
  )
)
(assert_return
  (invoke "i8x16.max_u"
    (v128.const i32x4 0x101_0101 0x101_0101 0x101_0101 0x101_0101)
    (v128.const i32x4 0x101_0101 0x101_0101 0x101_0101 0x101_0101)
  )
  (v128.const i8x16
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
  )
)
(assert_return
  (invoke "i8x16.max_u"
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
    (v128.const i32x4 0x101_0101 0x101_0101 0x101_0101 0x101_0101)
  )
  (v128.const i8x16
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
  )
)
(assert_return
  (invoke "i8x16.max_u"
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
    (v128.const i32x4 0x8080_8080 0x8080_8080 0x8080_8080 0x8080_8080)
  )
  (v128.const i8x16
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
    0xff
  )
)
(assert_return
  (invoke "i8x16.max_u"
    (v128.const i32x4 0x8080_8080 0x8080_8080 0x8080_8080 0x8080_8080)
    (v128.const i32x4 0x8080_8080 0x8080_8080 0x8080_8080 0x8080_8080)
  )
  (v128.const i8x16
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
  )
)
(assert_return
  (invoke "i8x16.max_u"
    (v128.const i32x4 0x8080_8080 0x8080_8080 0x8080_8080 0x8080_8080)
    (v128.const i32x4 0x8080_8080 0x8080_8080 0x8080_8080 0x8080_8080)
  )
  (v128.const i8x16
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
  )
)
(assert_return
  (invoke "i8x16.max_u"
    (v128.const i32x4 0x7b7b_7b7b 0x7b7b_7b7b 0x7b7b_7b7b 0x7b7b_7b7b)
    (v128.const i32x4 0x7b7b_7b7b 0x7b7b_7b7b 0x7b7b_7b7b 0x7b7b_7b7b)
  )
  (v128.const i8x16
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
  )
)
(assert_return
  (invoke "i8x16.max_u"
    (v128.const i32x4 0x8080_8080 0x8080_8080 0x8080_8080 0x8080_8080)
    (v128.const i32x4 0x8080_8080 0x8080_8080 0x8080_8080 0x8080_8080)
  )
  (v128.const i8x16
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
  )
)
(assert_return
  (invoke "i8x16.avgr_u"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0x0 0x0 0x0 0x0)
  )
  (v128.const i8x16
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
  )
)
(assert_return
  (invoke "i8x16.avgr_u"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i8x16
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
  )
)
(assert_return
  (invoke "i8x16.avgr_u"
    (v128.const i32x4 0x0 0x0 0xffff_ffff 0xffff_ffff)
    (v128.const i32x4 0x0 0xffff_ffff 0x0 0xffff_ffff)
  )
  (v128.const i8x16
    0x0
    0x0
    0x0
    0x0
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0xff
    0xff
    0xff
    0xff
  )
)
(assert_return
  (invoke "i8x16.avgr_u"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i8x16
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
  )
)
(assert_return
  (invoke "i8x16.avgr_u"
    (v128.const i32x4 0x101_0101 0x101_0101 0x101_0101 0x101_0101)
    (v128.const i32x4 0x101_0101 0x101_0101 0x101_0101 0x101_0101)
  )
  (v128.const i8x16
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
  )
)
(assert_return
  (invoke "i8x16.avgr_u"
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
    (v128.const i32x4 0x101_0101 0x101_0101 0x101_0101 0x101_0101)
  )
  (v128.const i8x16
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
  )
)
(assert_return
  (invoke "i8x16.avgr_u"
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
    (v128.const i32x4 0x8080_8080 0x8080_8080 0x8080_8080 0x8080_8080)
  )
  (v128.const i8x16
    0xc0
    0xc0
    0xc0
    0xc0
    0xc0
    0xc0
    0xc0
    0xc0
    0xc0
    0xc0
    0xc0
    0xc0
    0xc0
    0xc0
    0xc0
    0xc0
  )
)
(assert_return
  (invoke "i8x16.avgr_u"
    (v128.const i32x4 0x8080_8080 0x8080_8080 0x8080_8080 0x8080_8080)
    (v128.const i32x4 0x8080_8080 0x8080_8080 0x8080_8080 0x8080_8080)
  )
  (v128.const i8x16
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
  )
)
(assert_return
  (invoke "i8x16.avgr_u"
    (v128.const i32x4 0x8080_8080 0x8080_8080 0x8080_8080 0x8080_8080)
    (v128.const i32x4 0x8080_8080 0x8080_8080 0x8080_8080 0x8080_8080)
  )
  (v128.const i8x16
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
  )
)
(assert_return
  (invoke "i8x16.avgr_u"
    (v128.const i32x4 0x7b7b_7b7b 0x7b7b_7b7b 0x7b7b_7b7b 0x7b7b_7b7b)
    (v128.const i32x4 0x7b7b_7b7b 0x7b7b_7b7b 0x7b7b_7b7b 0x7b7b_7b7b)
  )
  (v128.const i8x16
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
  )
)
(assert_return
  (invoke "i8x16.avgr_u"
    (v128.const i32x4 0x8080_8080 0x8080_8080 0x8080_8080 0x8080_8080)
    (v128.const i32x4 0x8080_8080 0x8080_8080 0x8080_8080 0x8080_8080)
  )
  (v128.const i8x16
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
  )
)
(assert_return
  (invoke "i8x16.abs"
    (v128.const i32x4 0x101_0101 0x101_0101 0x101_0101 0x101_0101)
  )
  (v128.const i8x16
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
  )
)
(assert_return
  (invoke "i8x16.abs"
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i8x16
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
  )
)
(assert_return
  (invoke "i8x16.abs"
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i8x16
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
  )
)
(assert_return
  (invoke "i8x16.abs"
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i8x16
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
  )
)
(assert_return
  (invoke "i8x16.abs"
    (v128.const i32x4 0x8080_8080 0x8080_8080 0x8080_8080 0x8080_8080)
  )
  (v128.const i8x16
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
  )
)
(assert_return
  (invoke "i8x16.abs"
    (v128.const i32x4 0x8080_8080 0x8080_8080 0x8080_8080 0x8080_8080)
  )
  (v128.const i8x16
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
  )
)
(assert_return
  (invoke "i8x16.abs"
    (v128.const i32x4 0x8080_8080 0x8080_8080 0x8080_8080 0x8080_8080)
  )
  (v128.const i8x16
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
  )
)
(assert_return
  (invoke "i8x16.abs"
    (v128.const i32x4 0x8080_8080 0x8080_8080 0x8080_8080 0x8080_8080)
  )
  (v128.const i8x16
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
  )
)
(assert_return
  (invoke "i8x16.abs"
    (v128.const i32x4 0x7b7b_7b7b 0x7b7b_7b7b 0x7b7b_7b7b 0x7b7b_7b7b)
  )
  (v128.const i8x16
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
  )
)
(assert_return
  (invoke "i8x16.abs"
    (v128.const i32x4 0x8585_8585 0x8585_8585 0x8585_8585 0x8585_8585)
  )
  (v128.const i8x16
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
    0x7b
  )
)
(assert_return
  (invoke "i8x16.abs"
    (v128.const i32x4 0x8080_8080 0x8080_8080 0x8080_8080 0x8080_8080)
  )
  (v128.const i8x16
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
  )
)
(assert_return
  (invoke "i8x16.abs"
    (v128.const i32x4 0x8080_8080 0x8080_8080 0x8080_8080 0x8080_8080)
  )
  (v128.const i8x16
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
  )
)
(assert_return
  (invoke "i8x16.abs"
    (v128.const i32x4 0x8080_8080 0x8080_8080 0x8080_8080 0x8080_8080)
  )
  (v128.const i8x16
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
  )
)
(assert_return
  (invoke "i8x16.abs"
    (v128.const i32x4 0x8080_8080 0x8080_8080 0x8080_8080 0x8080_8080)
  )
  (v128.const i8x16
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
  )
)
(assert_return
  (invoke "i8x16.popcnt"
    (v128.const i32x4 0x101_0101 0x101_0101 0x101_0101 0x101_0101)
  )
  (v128.const i8x16
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
  )
)
(assert_return
  (invoke "i8x16.popcnt"
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i8x16
    0x8
    0x8
    0x8
    0x8
    0x8
    0x8
    0x8
    0x8
    0x8
    0x8
    0x8
    0x8
    0x8
    0x8
    0x8
    0x8
  )
)
(assert_return
  (invoke "i8x16.popcnt"
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i8x16
    0x8
    0x8
    0x8
    0x8
    0x8
    0x8
    0x8
    0x8
    0x8
    0x8
    0x8
    0x8
    0x8
    0x8
    0x8
    0x8
  )
)
(assert_return
  (invoke "i8x16.popcnt"
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i8x16
    0x8
    0x8
    0x8
    0x8
    0x8
    0x8
    0x8
    0x8
    0x8
    0x8
    0x8
    0x8
    0x8
    0x8
    0x8
    0x8
  )
)
(assert_return
  (invoke "i8x16.popcnt"
    (v128.const i32x4 0x8080_8080 0x8080_8080 0x8080_8080 0x8080_8080)
  )
  (v128.const i8x16
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
  )
)
(assert_return
  (invoke "i8x16.popcnt"
    (v128.const i32x4 0x8080_8080 0x8080_8080 0x8080_8080 0x8080_8080)
  )
  (v128.const i8x16
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
  )
)
(assert_return
  (invoke "i8x16.popcnt"
    (v128.const i32x4 0x8080_8080 0x8080_8080 0x8080_8080 0x8080_8080)
  )
  (v128.const i8x16
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
  )
)
(assert_return
  (invoke "i8x16.popcnt"
    (v128.const i32x4 0x8080_8080 0x8080_8080 0x8080_8080 0x8080_8080)
  )
  (v128.const i8x16
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
  )
)
(assert_return
  (invoke "i8x16.popcnt"
    (v128.const i32x4 0x7b7b_7b7b 0x7b7b_7b7b 0x7b7b_7b7b 0x7b7b_7b7b)
  )
  (v128.const i8x16
    0x6
    0x6
    0x6
    0x6
    0x6
    0x6
    0x6
    0x6
    0x6
    0x6
    0x6
    0x6
    0x6
    0x6
    0x6
    0x6
  )
)
(assert_return
  (invoke "i8x16.popcnt"
    (v128.const i32x4 0x8585_8585 0x8585_8585 0x8585_8585 0x8585_8585)
  )
  (v128.const i8x16
    0x3
    0x3
    0x3
    0x3
    0x3
    0x3
    0x3
    0x3
    0x3
    0x3
    0x3
    0x3
    0x3
    0x3
    0x3
    0x3
  )
)
(assert_return
  (invoke "i8x16.popcnt"
    (v128.const i32x4 0x8080_8080 0x8080_8080 0x8080_8080 0x8080_8080)
  )
  (v128.const i8x16
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
  )
)
(assert_return
  (invoke "i8x16.popcnt"
    (v128.const i32x4 0x8080_8080 0x8080_8080 0x8080_8080 0x8080_8080)
  )
  (v128.const i8x16
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
  )
)
(assert_return
  (invoke "i8x16.popcnt"
    (v128.const i32x4 0x8080_8080 0x8080_8080 0x8080_8080 0x8080_8080)
  )
  (v128.const i8x16
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
  )
)
(assert_return
  (invoke "i8x16.popcnt"
    (v128.const i32x4 0x8080_8080 0x8080_8080 0x8080_8080 0x8080_8080)
  )
  (v128.const i8x16
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
  )
)
(assert_return
  (invoke "i8x16.min_s_with_const_0")
  (v128.const i8x16
    0x80
    0x80
    0x80
    0x80
    0x40
    0x40
    0x40
    0x40
    0x40
    0x40
    0x40
    0x40
    0x80
    0x80
    0x80
    0x80
  )
)
(assert_return
  (invoke "i8x16.min_s_with_const_1")
  (v128.const i8x16
    0x0
    0x0
    0x0
    0x0
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x0
    0x0
    0x0
    0x0
  )
)
(assert_return
  (invoke "i8x16.min_u_with_const_2")
  (v128.const i8x16
    0x80
    0x80
    0x80
    0x80
    0x40
    0x40
    0x40
    0x40
    0x40
    0x40
    0x40
    0x40
    0x80
    0x80
    0x80
    0x80
  )
)
(assert_return
  (invoke "i8x16.min_u_with_const_3")
  (v128.const i8x16
    0x0
    0x0
    0x0
    0x0
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x0
    0x0
    0x0
    0x0
  )
)
(assert_return
  (invoke "i8x16.max_s_with_const_4")
  (v128.const i8x16
    0xff
    0xff
    0xff
    0xff
    0x7f
    0x7f
    0x7f
    0x7f
    0x7f
    0x7f
    0x7f
    0x7f
    0xff
    0xff
    0xff
    0xff
  )
)
(assert_return
  (invoke "i8x16.max_s_with_const_5")
  (v128.const i8x16
    0x3
    0x3
    0x3
    0x3
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x3
    0x3
    0x3
    0x3
  )
)
(assert_return
  (invoke "i8x16.max_u_with_const_6")
  (v128.const i8x16
    0xff
    0xff
    0xff
    0xff
    0x7f
    0x7f
    0x7f
    0x7f
    0x7f
    0x7f
    0x7f
    0x7f
    0xff
    0xff
    0xff
    0xff
  )
)
(assert_return
  (invoke "i8x16.max_u_with_const_7")
  (v128.const i8x16
    0x3
    0x3
    0x3
    0x3
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x3
    0x3
    0x3
    0x3
  )
)
(assert_return
  (invoke "i8x16.avgr_u_with_const_8")
  (v128.const i8x16
    0xc0
    0xc0
    0xc0
    0xc0
    0x60
    0x60
    0x60
    0x60
    0x60
    0x60
    0x60
    0x60
    0xc0
    0xc0
    0xc0
    0xc0
  )
)
(assert_return
  (invoke "i8x16.avgr_u_with_const_9")
  (v128.const i8x16
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
  )
)
(assert_return
  (invoke "i8x16.abs_with_const_10")
  (v128.const i8x16
    0x80
    0x80
    0x80
    0x80
    0x7f
    0x7f
    0x7f
    0x7f
    0x40
    0x40
    0x40
    0x40
    0x1
    0x1
    0x1
    0x1
  )
)
(assert_return
  (invoke "i8x16.popcnt_with_const_11")
  (v128.const i8x16
    0x1
    0x1
    0x1
    0x1
    0x7
    0x7
    0x7
    0x7
    0x1
    0x1
    0x1
    0x1
    0x8
    0x8
    0x8
    0x8
  )
)
(assert_return
  (invoke "i8x16.min_s_with_const_12"
    (v128.const i32x4 0xffff_ffff 0x4040_4040 0x7f7f_7f7f 0x8080_8080)
  )
  (v128.const i8x16
    0x80
    0x80
    0x80
    0x80
    0x40
    0x40
    0x40
    0x40
    0x40
    0x40
    0x40
    0x40
    0x80
    0x80
    0x80
    0x80
  )
)
(assert_return
  (invoke "i8x16.min_s_with_const_13"
    (v128.const i32x4 0x303_0303 0x202_0202 0x101_0101 0x0)
  )
  (v128.const i8x16
    0x0
    0x0
    0x0
    0x0
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x0
    0x0
    0x0
    0x0
  )
)
(assert_return
  (invoke "i8x16.min_u_with_const_14"
    (v128.const i32x4 0xffff_ffff 0x4040_4040 0x7f7f_7f7f 0x8080_8080)
  )
  (v128.const i8x16
    0x80
    0x80
    0x80
    0x80
    0x40
    0x40
    0x40
    0x40
    0x40
    0x40
    0x40
    0x40
    0x80
    0x80
    0x80
    0x80
  )
)
(assert_return
  (invoke "i8x16.min_u_with_const_15"
    (v128.const i32x4 0x303_0303 0x202_0202 0x101_0101 0x0)
  )
  (v128.const i8x16
    0x0
    0x0
    0x0
    0x0
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x0
    0x0
    0x0
    0x0
  )
)
(assert_return
  (invoke "i8x16.max_s_with_const_16"
    (v128.const i32x4 0xffff_ffff 0x4040_4040 0x7f7f_7f7f 0x8080_8080)
  )
  (v128.const i8x16
    0xff
    0xff
    0xff
    0xff
    0x7f
    0x7f
    0x7f
    0x7f
    0x7f
    0x7f
    0x7f
    0x7f
    0xff
    0xff
    0xff
    0xff
  )
)
(assert_return
  (invoke "i8x16.max_s_with_const_17"
    (v128.const i32x4 0x303_0303 0x202_0202 0x101_0101 0x0)
  )
  (v128.const i8x16
    0x3
    0x3
    0x3
    0x3
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x3
    0x3
    0x3
    0x3
  )
)
(assert_return
  (invoke "i8x16.max_u_with_const_18"
    (v128.const i32x4 0xffff_ffff 0x4040_4040 0x7f7f_7f7f 0x8080_8080)
  )
  (v128.const i8x16
    0xff
    0xff
    0xff
    0xff
    0x7f
    0x7f
    0x7f
    0x7f
    0x7f
    0x7f
    0x7f
    0x7f
    0xff
    0xff
    0xff
    0xff
  )
)
(assert_return
  (invoke "i8x16.max_u_with_const_19"
    (v128.const i32x4 0x303_0303 0x202_0202 0x101_0101 0x0)
  )
  (v128.const i8x16
    0x3
    0x3
    0x3
    0x3
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x3
    0x3
    0x3
    0x3
  )
)
(assert_return
  (invoke "i8x16.avgr_u_with_const_20"
    (v128.const i32x4 0xffff_ffff 0x4040_4040 0x7f7f_7f7f 0x8080_8080)
  )
  (v128.const i8x16
    0xc0
    0xc0
    0xc0
    0xc0
    0x60
    0x60
    0x60
    0x60
    0x60
    0x60
    0x60
    0x60
    0xc0
    0xc0
    0xc0
    0xc0
  )
)
(assert_return
  (invoke "i8x16.avgr_u_with_const_21"
    (v128.const i32x4 0x303_0303 0x202_0202 0x101_0101 0x0)
  )
  (v128.const i8x16
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
  )
)
(assert_return
  (invoke "i8x16.min_s"
    (v128.const i32x4 0x8080_8080 0x7f7f_7f7f 0x4040_4040 0xffff_ffff)
    (v128.const i32x4 0xffff_ffff 0x4040_4040 0x7f7f_7f7f 0x8080_8080)
  )
  (v128.const i8x16
    0x80
    0x80
    0x80
    0x80
    0x40
    0x40
    0x40
    0x40
    0x40
    0x40
    0x40
    0x40
    0x80
    0x80
    0x80
    0x80
  )
)
(assert_return
  (invoke "i8x16.min_s"
    (v128.const i32x4 0x0 0x101_0101 0x202_0202 0x8080_8080)
    (v128.const i32x4 0x0 0x202_0202 0x101_0101 0x8080_8080)
  )
  (v128.const i8x16
    0x0
    0x0
    0x0
    0x0
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x80
    0x80
    0x80
    0x80
  )
)
(assert_return
  (invoke "i8x16.min_u"
    (v128.const i32x4 0x8080_8080 0x7f7f_7f7f 0x4040_4040 0xffff_ffff)
    (v128.const i32x4 0xffff_ffff 0x4040_4040 0x7f7f_7f7f 0x8080_8080)
  )
  (v128.const i8x16
    0x80
    0x80
    0x80
    0x80
    0x40
    0x40
    0x40
    0x40
    0x40
    0x40
    0x40
    0x40
    0x80
    0x80
    0x80
    0x80
  )
)
(assert_return
  (invoke "i8x16.min_u"
    (v128.const i32x4 0x0 0x101_0101 0x202_0202 0x8080_8080)
    (v128.const i32x4 0x0 0x202_0202 0x101_0101 0x8080_8080)
  )
  (v128.const i8x16
    0x0
    0x0
    0x0
    0x0
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x80
    0x80
    0x80
    0x80
  )
)
(assert_return
  (invoke "i8x16.max_s"
    (v128.const i32x4 0x8080_8080 0x7f7f_7f7f 0x4040_4040 0xffff_ffff)
    (v128.const i32x4 0xffff_ffff 0x4040_4040 0x7f7f_7f7f 0x8080_8080)
  )
  (v128.const i8x16
    0xff
    0xff
    0xff
    0xff
    0x7f
    0x7f
    0x7f
    0x7f
    0x7f
    0x7f
    0x7f
    0x7f
    0xff
    0xff
    0xff
    0xff
  )
)
(assert_return
  (invoke "i8x16.max_s"
    (v128.const i32x4 0x0 0x101_0101 0x202_0202 0x8080_8080)
    (v128.const i32x4 0x0 0x202_0202 0x101_0101 0x8080_8080)
  )
  (v128.const i8x16
    0x0
    0x0
    0x0
    0x0
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x80
    0x80
    0x80
    0x80
  )
)
(assert_return
  (invoke "i8x16.max_u"
    (v128.const i32x4 0x8080_8080 0x7f7f_7f7f 0x4040_4040 0xffff_ffff)
    (v128.const i32x4 0xffff_ffff 0x4040_4040 0x7f7f_7f7f 0x8080_8080)
  )
  (v128.const i8x16
    0xff
    0xff
    0xff
    0xff
    0x7f
    0x7f
    0x7f
    0x7f
    0x7f
    0x7f
    0x7f
    0x7f
    0xff
    0xff
    0xff
    0xff
  )
)
(assert_return
  (invoke "i8x16.max_u"
    (v128.const i32x4 0x0 0x101_0101 0x202_0202 0x8080_8080)
    (v128.const i32x4 0x0 0x202_0202 0x101_0101 0x8080_8080)
  )
  (v128.const i8x16
    0x0
    0x0
    0x0
    0x0
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x80
    0x80
    0x80
    0x80
  )
)
(assert_return
  (invoke "i8x16.avgr_u"
    (v128.const i32x4 0x8080_8080 0x7f7f_7f7f 0x4040_4040 0xffff_ffff)
    (v128.const i32x4 0xffff_ffff 0x4040_4040 0x7f7f_7f7f 0x8080_8080)
  )
  (v128.const i8x16
    0xc0
    0xc0
    0xc0
    0xc0
    0x60
    0x60
    0x60
    0x60
    0x60
    0x60
    0x60
    0x60
    0xc0
    0xc0
    0xc0
    0xc0
  )
)
(assert_return
  (invoke "i8x16.avgr_u"
    (v128.const i32x4 0x0 0x101_0101 0x202_0202 0x8080_8080)
    (v128.const i32x4 0x0 0x202_0202 0x101_0101 0x8080_8080)
  )
  (v128.const i8x16
    0x0
    0x0
    0x0
    0x0
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x80
    0x80
    0x80
    0x80
  )
)
(assert_return
  (invoke "i8x16.abs"
    (v128.const i32x4 0x8080_8080 0x7f7f_7f7f 0x4040_4040 0xffff_ffff)
  )
  (v128.const i8x16
    0x80
    0x80
    0x80
    0x80
    0x7f
    0x7f
    0x7f
    0x7f
    0x40
    0x40
    0x40
    0x40
    0x1
    0x1
    0x1
    0x1
  )
)
(assert_return
  (invoke "i8x16.popcnt"
    (v128.const i32x4 0x8080_8080 0x7f7f_7f7f 0x4040_4040 0xffff_ffff)
  )
  (v128.const i8x16
    0x1
    0x1
    0x1
    0x1
    0x7
    0x7
    0x7
    0x7
    0x1
    0x1
    0x1
    0x1
    0x8
    0x8
    0x8
    0x8
  )
)
(assert_return
  (invoke "i8x16.min_s"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0x0 0x0 0x0 0x0)
  )
  (v128.const i8x16
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
  )
)
(assert_return
  (invoke "i8x16.min_s"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0x0 0x0 0x0 0x0)
  )
  (v128.const i8x16
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
  )
)
(assert_return
  (invoke "i8x16.min_u"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0x0 0x0 0x0 0x0)
  )
  (v128.const i8x16
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
  )
)
(assert_return
  (invoke "i8x16.min_u"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0x0 0x0 0x0 0x0)
  )
  (v128.const i8x16
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
  )
)
(assert_return
  (invoke "i8x16.max_s"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0x0 0x0 0x0 0x0)
  )
  (v128.const i8x16
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
  )
)
(assert_return
  (invoke "i8x16.max_s"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0x0 0x0 0x0 0x0)
  )
  (v128.const i8x16
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
  )
)
(assert_return
  (invoke "i8x16.max_u"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0x0 0x0 0x0 0x0)
  )
  (v128.const i8x16
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
  )
)
(assert_return
  (invoke "i8x16.max_u"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0x0 0x0 0x0 0x0)
  )
  (v128.const i8x16
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
  )
)
(assert_return
  (invoke "i8x16.avgr_u"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0x0 0x0 0x0 0x0)
  )
  (v128.const i8x16
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
  )
)
(assert_return
  (invoke "i8x16.avgr_u"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0x0 0x0 0x0 0x0)
  )
  (v128.const i8x16
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
  )
)
(assert_return
  (invoke "i8x16.abs" (v128.const i32x4 0x0 0x0 0x0 0x0))
  (v128.const i8x16
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
  )
)
(assert_return
  (invoke "i8x16.abs" (v128.const i32x4 0x0 0x0 0x0 0x0))
  (v128.const i8x16
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
  )
)
(assert_return
  (invoke "i8x16.abs" (v128.const i32x4 0x0 0x0 0x0 0x0))
  (v128.const i8x16
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
  )
)
(assert_return
  (invoke "i8x16.abs" (v128.const i32x4 0x0 0x0 0x0 0x0))
  (v128.const i8x16
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
  )
)
(assert_return
  (invoke "i8x16.popcnt" (v128.const i32x4 0x0 0x0 0x0 0x0))
  (v128.const i8x16
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
  )
)
(assert_return
  (invoke "i8x16.popcnt" (v128.const i32x4 0x0 0x0 0x0 0x0))
  (v128.const i8x16
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
  )
)
(assert_return
  (invoke "i8x16.popcnt" (v128.const i32x4 0x0 0x0 0x0 0x0))
  (v128.const i8x16
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
  )
)
(assert_return
  (invoke "i8x16.popcnt" (v128.const i32x4 0x0 0x0 0x0 0x0))
  (v128.const i8x16
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
  )
)
(assert_invalid
  (module binary
    "\00\61\73\6d\01\00\00\00\01\85\80\80\80\00\01\60"
    "\00\01\7b\03\82\80\80\80\00\01\00\0a\91\80\80\80"
    "\00\01\8b\80\80\80\00\00\41\00\43\00\00\00\00\fd"
    "\76\0b"
  )
  "type mismatch"
)
(assert_invalid
  (module binary
    "\00\61\73\6d\01\00\00\00\01\85\80\80\80\00\01\60"
    "\00\01\7b\03\82\80\80\80\00\01\00\0a\91\80\80\80"
    "\00\01\8b\80\80\80\00\00\41\00\43\00\00\00\00\fd"
    "\77\0b"
  )
  "type mismatch"
)
(assert_invalid
  (module binary
    "\00\61\73\6d\01\00\00\00\01\85\80\80\80\00\01\60"
    "\00\01\7b\03\82\80\80\80\00\01\00\0a\91\80\80\80"
    "\00\01\8b\80\80\80\00\00\41\00\43\00\00\00\00\fd"
    "\78\0b"
  )
  "type mismatch"
)
(assert_invalid
  (module binary
    "\00\61\73\6d\01\00\00\00\01\85\80\80\80\00\01\60"
    "\00\01\7b\03\82\80\80\80\00\01\00\0a\91\80\80\80"
    "\00\01\8b\80\80\80\00\00\41\00\43\00\00\00\00\fd"
    "\79\0b"
  )
  "type mismatch"
)
(assert_invalid
  (module binary
    "\00\61\73\6d\01\00\00\00\01\85\80\80\80\00\01\60"
    "\00\01\7b\03\82\80\80\80\00\01\00\0a\91\80\80\80"
    "\00\01\8b\80\80\80\00\00\41\00\43\00\00\00\00\fd"
    "\7b\0b"
  )
  "type mismatch"
)
(assert_invalid
  (module binary
    "\00\61\73\6d\01\00\00\00\01\85\80\80\80\00\01\60"
    "\00\01\7b\03\82\80\80\80\00\01\00\0a\8f\80\80\80"
    "\00\01\89\80\80\80\00\00\43\00\00\00\00\fd\60\0b"
  )
  "type mismatch"
)
(assert_invalid
  (module binary
    "\00\61\73\6d\01\00\00\00\01\85\80\80\80\00\01\60"
    "\00\01\7b\03\82\80\80\80\00\01\00\0a\8f\80\80\80"
    "\00\01\89\80\80\80\00\00\43\00\00\00\00\fd\62\0b"
  )
  "type mismatch"
)
(assert_invalid
  (module binary
    "\00\61\73\6d\01\00\00\00\01\85\80\80\80\00\01\60"
    "\00\01\7b\03\82\80\80\80\00\01\00\0a\9c\80\80\80"
    "\00\01\96\80\80\80\00\00\fd\0c\00\00\00\00\00\00"
    "\00\00\00\00\00\00\00\00\00\00\fd\76\0b"
  )
  "type mismatch"
)
(assert_invalid
  (module binary
    "\00\61\73\6d\01\00\00\00\01\85\80\80\80\00\01\60"
    "\00\01\7b\03\82\80\80\80\00\01\00\0a\8a\80\80\80"
    "\00\01\84\80\80\80\00\00\fd\76\0b"
  )
  "type mismatch"
)
(assert_invalid
  (module binary
    "\00\61\73\6d\01\00\00\00\01\85\80\80\80\00\01\60"
    "\00\01\7b\03\82\80\80\80\00\01\00\0a\9c\80\80\80"
    "\00\01\96\80\80\80\00\00\fd\0c\00\00\00\00\00\00"
    "\00\00\00\00\00\00\00\00\00\00\fd\77\0b"
  )
  "type mismatch"
)
(assert_invalid
  (module binary
    "\00\61\73\6d\01\00\00\00\01\85\80\80\80\00\01\60"
    "\00\01\7b\03\82\80\80\80\00\01\00\0a\8a\80\80\80"
    "\00\01\84\80\80\80\00\00\fd\77\0b"
  )
  "type mismatch"
)
(assert_invalid
  (module binary
    "\00\61\73\6d\01\00\00\00\01\85\80\80\80\00\01\60"
    "\00\01\7b\03\82\80\80\80\00\01\00\0a\9c\80\80\80"
    "\00\01\96\80\80\80\00\00\fd\0c\00\00\00\00\00\00"
    "\00\00\00\00\00\00\00\00\00\00\fd\78\0b"
  )
  "type mismatch"
)
(assert_invalid
  (module binary
    "\00\61\73\6d\01\00\00\00\01\85\80\80\80\00\01\60"
    "\00\01\7b\03\82\80\80\80\00\01\00\0a\8a\80\80\80"
    "\00\01\84\80\80\80\00\00\fd\78\0b"
  )
  "type mismatch"
)
(assert_invalid
  (module binary
    "\00\61\73\6d\01\00\00\00\01\85\80\80\80\00\01\60"
    "\00\01\7b\03\82\80\80\80\00\01\00\0a\9c\80\80\80"
    "\00\01\96\80\80\80\00\00\fd\0c\00\00\00\00\00\00"
    "\00\00\00\00\00\00\00\00\00\00\fd\79\0b"
  )
  "type mismatch"
)
(assert_invalid
  (module binary
    "\00\61\73\6d\01\00\00\00\01\85\80\80\80\00\01\60"
    "\00\01\7b\03\82\80\80\80\00\01\00\0a\8a\80\80\80"
    "\00\01\84\80\80\80\00\00\fd\79\0b"
  )
  "type mismatch"
)
(assert_invalid
  (module binary
    "\00\61\73\6d\01\00\00\00\01\85\80\80\80\00\01\60"
    "\00\01\7b\03\82\80\80\80\00\01\00\0a\9c\80\80\80"
    "\00\01\96\80\80\80\00\00\fd\0c\00\00\00\00\00\00"
    "\00\00\00\00\00\00\00\00\00\00\fd\7b\0b"
  )
  "type mismatch"
)
(assert_invalid
  (module binary
    "\00\61\73\6d\01\00\00\00\01\85\80\80\80\00\01\60"
    "\00\01\7b\03\82\80\80\80\00\01\00\0a\8a\80\80\80"
    "\00\01\84\80\80\80\00\00\fd\7b\0b"
  )
  "type mismatch"
)
(assert_invalid
  (module binary
    "\00\61\73\6d\01\00\00\00\01\85\80\80\80\00\01\60"
    "\00\01\7b\03\82\80\80\80\00\01\00\0a\8a\80\80\80"
    "\00\01\84\80\80\80\00\00\fd\60\0b"
  )
  "type mismatch"
)
(assert_invalid
  (module binary
    "\00\61\73\6d\01\00\00\00\01\85\80\80\80\00\01\60"
    "\00\01\7b\03\82\80\80\80\00\01\00\0a\8a\80\80\80"
    "\00\01\84\80\80\80\00\00\fd\62\0b"
  )
  "type mismatch"
)
(module binary
  "\00\61\73\6d\01\00\00\00\01\93\80\80\80\00\03\60"
  "\03\7b\7b\7b\01\7b\60\02\7b\7b\01\7b\60\01\7b\01"
  "\7b\03\ab\80\80\80\00\2a\00\00\00\00\00\01\01\01"
  "\00\00\00\00\00\01\01\01\00\00\00\00\00\01\01\01"
  "\00\00\00\00\00\01\01\01\00\00\00\00\00\01\01\01"
  "\02\02\07\be\88\80\80\00\2a\18\69\38\78\31\36\2e"
  "\6d\69\6e\5f\73\2d\69\38\78\31\36\2e\61\76\67\72"
  "\5f\75\00\00\17\69\38\78\31\36\2e\6d\69\6e\5f\73"
  "\2d\69\38\78\31\36\2e\6d\61\78\5f\75\00\01\17\69"
  "\38\78\31\36\2e\6d\69\6e\5f\73\2d\69\38\78\31\36"
  "\2e\6d\61\78\5f\73\00\02\17\69\38\78\31\36\2e\6d"
  "\69\6e\5f\73\2d\69\38\78\31\36\2e\6d\69\6e\5f\75"
  "\00\03\17\69\38\78\31\36\2e\6d\69\6e\5f\73\2d\69"
  "\38\78\31\36\2e\6d\69\6e\5f\73\00\04\15\69\38\78"
  "\31\36\2e\6d\69\6e\5f\73\2d\69\38\78\31\36\2e\61"
  "\62\73\00\05\15\69\38\78\31\36\2e\61\62\73\2d\69"
  "\38\78\31\36\2e\6d\69\6e\5f\73\00\06\18\69\38\78"
  "\31\36\2e\6d\69\6e\5f\73\2d\69\38\78\31\36\2e\70"
  "\6f\70\63\6e\74\00\07\18\69\38\78\31\36\2e\6d\69"
  "\6e\5f\75\2d\69\38\78\31\36\2e\61\76\67\72\5f\75"
  "\00\08\17\69\38\78\31\36\2e\6d\69\6e\5f\75\2d\69"
  "\38\78\31\36\2e\6d\61\78\5f\75\00\09\17\69\38\78"
  "\31\36\2e\6d\69\6e\5f\75\2d\69\38\78\31\36\2e\6d"
  "\61\78\5f\73\00\0a\17\69\38\78\31\36\2e\6d\69\6e"
  "\5f\75\2d\69\38\78\31\36\2e\6d\69\6e\5f\75\00\0b"
  "\17\69\38\78\31\36\2e\6d\69\6e\5f\75\2d\69\38\78"
  "\31\36\2e\6d\69\6e\5f\73\00\0c\15\69\38\78\31\36"
  "\2e\6d\69\6e\5f\75\2d\69\38\78\31\36\2e\61\62\73"
  "\00\0d\15\69\38\78\31\36\2e\61\62\73\2d\69\38\78"
  "\31\36\2e\6d\69\6e\5f\75\00\0e\18\69\38\78\31\36"
  "\2e\6d\69\6e\5f\75\2d\69\38\78\31\36\2e\70\6f\70"
  "\63\6e\74\00\0f\18\69\38\78\31\36\2e\6d\61\78\5f"
  "\73\2d\69\38\78\31\36\2e\61\76\67\72\5f\75\00\10"
  "\17\69\38\78\31\36\2e\6d\61\78\5f\73\2d\69\38\78"
  "\31\36\2e\6d\61\78\5f\75\00\11\17\69\38\78\31\36"
  "\2e\6d\61\78\5f\73\2d\69\38\78\31\36\2e\6d\61\78"
  "\5f\73\00\12\17\69\38\78\31\36\2e\6d\61\78\5f\73"
  "\2d\69\38\78\31\36\2e\6d\69\6e\5f\75\00\13\17\69"
  "\38\78\31\36\2e\6d\61\78\5f\73\2d\69\38\78\31\36"
  "\2e\6d\69\6e\5f\73\00\14\15\69\38\78\31\36\2e\6d"
  "\61\78\5f\73\2d\69\38\78\31\36\2e\61\62\73\00\15"
  "\15\69\38\78\31\36\2e\61\62\73\2d\69\38\78\31\36"
  "\2e\6d\61\78\5f\73\00\16\18\69\38\78\31\36\2e\6d"
  "\61\78\5f\73\2d\69\38\78\31\36\2e\70\6f\70\63\6e"
  "\74\00\17\18\69\38\78\31\36\2e\6d\61\78\5f\75\2d"
  "\69\38\78\31\36\2e\61\76\67\72\5f\75\00\18\17\69"
  "\38\78\31\36\2e\6d\61\78\5f\75\2d\69\38\78\31\36"
  "\2e\6d\61\78\5f\75\00\19\17\69\38\78\31\36\2e\6d"
  "\61\78\5f\75\2d\69\38\78\31\36\2e\6d\61\78\5f\73"
  "\00\1a\17\69\38\78\31\36\2e\6d\61\78\5f\75\2d\69"
  "\38\78\31\36\2e\6d\69\6e\5f\75\00\1b\17\69\38\78"
  "\31\36\2e\6d\61\78\5f\75\2d\69\38\78\31\36\2e\6d"
  "\69\6e\5f\73\00\1c\15\69\38\78\31\36\2e\6d\61\78"
  "\5f\75\2d\69\38\78\31\36\2e\61\62\73\00\1d\15\69"
  "\38\78\31\36\2e\61\62\73\2d\69\38\78\31\36\2e\6d"
  "\61\78\5f\75\00\1e\18\69\38\78\31\36\2e\6d\61\78"
  "\5f\75\2d\69\38\78\31\36\2e\70\6f\70\63\6e\74\00"
  "\1f\19\69\38\78\31\36\2e\61\76\67\72\5f\75\2d\69"
  "\38\78\31\36\2e\61\76\67\72\5f\75\00\20\18\69\38"
  "\78\31\36\2e\61\76\67\72\5f\75\2d\69\38\78\31\36"
  "\2e\6d\61\78\5f\75\00\21\18\69\38\78\31\36\2e\61"
  "\76\67\72\5f\75\2d\69\38\78\31\36\2e\6d\61\78\5f"
  "\73\00\22\18\69\38\78\31\36\2e\61\76\67\72\5f\75"
  "\2d\69\38\78\31\36\2e\6d\69\6e\5f\75\00\23\18\69"
  "\38\78\31\36\2e\61\76\67\72\5f\75\2d\69\38\78\31"
  "\36\2e\6d\69\6e\5f\73\00\24\16\69\38\78\31\36\2e"
  "\61\76\67\72\5f\75\2d\69\38\78\31\36\2e\61\62\73"
  "\00\25\16\69\38\78\31\36\2e\61\62\73\2d\69\38\78"
  "\31\36\2e\61\76\67\72\5f\75\00\26\19\69\38\78\31"
  "\36\2e\61\76\67\72\5f\75\2d\69\38\78\31\36\2e\70"
  "\6f\70\63\6e\74\00\27\16\69\38\78\31\36\2e\61\62"
  "\73\2d\69\38\78\31\36\2e\70\6f\70\63\6e\74\00\28"
  "\13\69\38\78\31\36\2e\61\62\73\2d\69\38\78\31\36"
  "\2e\61\62\73\00\29\0a\a5\85\80\80\00\2a\8c\80\80"
  "\80\00\00\20\00\20\01\fd\7b\20\02\fd\76\0b\8c\80"
  "\80\80\00\00\20\00\20\01\fd\79\20\02\fd\76\0b\8c"
  "\80\80\80\00\00\20\00\20\01\fd\78\20\02\fd\76\0b"
  "\8c\80\80\80\00\00\20\00\20\01\fd\77\20\02\fd\76"
  "\0b\8c\80\80\80\00\00\20\00\20\01\fd\76\20\02\fd"
  "\76\0b\8a\80\80\80\00\00\20\00\fd\60\20\01\fd\76"
  "\0b\8a\80\80\80\00\00\20\00\20\01\fd\76\fd\60\0b"
  "\8a\80\80\80\00\00\20\00\fd\62\20\01\fd\76\0b\8c"
  "\80\80\80\00\00\20\00\20\01\fd\7b\20\02\fd\77\0b"
  "\8c\80\80\80\00\00\20\00\20\01\fd\79\20\02\fd\77"
  "\0b\8c\80\80\80\00\00\20\00\20\01\fd\78\20\02\fd"
  "\77\0b\8c\80\80\80\00\00\20\00\20\01\fd\77\20\02"
  "\fd\77\0b\8c\80\80\80\00\00\20\00\20\01\fd\76\20"
  "\02\fd\77\0b\8a\80\80\80\00\00\20\00\fd\60\20\01"
  "\fd\77\0b\8a\80\80\80\00\00\20\00\20\01\fd\77\fd"
  "\60\0b\8a\80\80\80\00\00\20\00\fd\62\20\01\fd\77"
  "\0b\8c\80\80\80\00\00\20\00\20\01\fd\7b\20\02\fd"
  "\78\0b\8c\80\80\80\00\00\20\00\20\01\fd\79\20\02"
  "\fd\78\0b\8c\80\80\80\00\00\20\00\20\01\fd\78\20"
  "\02\fd\78\0b\8c\80\80\80\00\00\20\00\20\01\fd\77"
  "\20\02\fd\78\0b\8c\80\80\80\00\00\20\00\20\01\fd"
  "\76\20\02\fd\78\0b\8a\80\80\80\00\00\20\00\fd\60"
  "\20\01\fd\78\0b\8a\80\80\80\00\00\20\00\20\01\fd"
  "\78\fd\60\0b\8a\80\80\80\00\00\20\00\fd\62\20\01"
  "\fd\78\0b\8c\80\80\80\00\00\20\00\20\01\fd\7b\20"
  "\02\fd\79\0b\8c\80\80\80\00\00\20\00\20\01\fd\79"
  "\20\02\fd\79\0b\8c\80\80\80\00\00\20\00\20\01\fd"
  "\78\20\02\fd\79\0b\8c\80\80\80\00\00\20\00\20\01"
  "\fd\77\20\02\fd\79\0b\8c\80\80\80\00\00\20\00\20"
  "\01\fd\76\20\02\fd\79\0b\8a\80\80\80\00\00\20\00"
  "\fd\60\20\01\fd\79\0b\8a\80\80\80\00\00\20\00\20"
  "\01\fd\79\fd\60\0b\8a\80\80\80\00\00\20\00\fd\62"
  "\20\01\fd\79\0b\8c\80\80\80\00\00\20\00\20\01\fd"
  "\7b\20\02\fd\7b\0b\8c\80\80\80\00\00\20\00\20\01"
  "\fd\79\20\02\fd\7b\0b\8c\80\80\80\00\00\20\00\20"
  "\01\fd\78\20\02\fd\7b\0b\8c\80\80\80\00\00\20\00"
  "\20\01\fd\77\20\02\fd\7b\0b\8c\80\80\80\00\00\20"
  "\00\20\01\fd\76\20\02\fd\7b\0b\8a\80\80\80\00\00"
  "\20\00\fd\60\20\01\fd\7b\0b\8a\80\80\80\00\00\20"
  "\00\20\01\fd\7b\fd\60\0b\8a\80\80\80\00\00\20\00"
  "\fd\62\20\01\fd\7b\0b\88\80\80\80\00\00\20\00\fd"
  "\62\fd\60\0b\88\80\80\80\00\00\20\00\fd\60\fd\60"
  "\0b"
)
(assert_return
  (invoke "i8x16.min_s-i8x16.avgr_u"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0x101_0101 0x101_0101 0x101_0101 0x101_0101)
    (v128.const i32x4 0x202_0202 0x202_0202 0x202_0202 0x202_0202)
  )
  (v128.const i8x16
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
  )
)
(assert_return
  (invoke "i8x16.min_s-i8x16.max_u"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0x101_0101 0x101_0101 0x101_0101 0x101_0101)
    (v128.const i32x4 0x202_0202 0x202_0202 0x202_0202 0x202_0202)
  )
  (v128.const i8x16
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
  )
)
(assert_return
  (invoke "i8x16.min_s-i8x16.max_s"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0x101_0101 0x101_0101 0x101_0101 0x101_0101)
    (v128.const i32x4 0x202_0202 0x202_0202 0x202_0202 0x202_0202)
  )
  (v128.const i8x16
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
  )
)
(assert_return
  (invoke "i8x16.min_s-i8x16.min_u"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0x101_0101 0x101_0101 0x101_0101 0x101_0101)
    (v128.const i32x4 0x202_0202 0x202_0202 0x202_0202 0x202_0202)
  )
  (v128.const i8x16
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
  )
)
(assert_return
  (invoke "i8x16.min_s-i8x16.min_s"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0x101_0101 0x101_0101 0x101_0101 0x101_0101)
    (v128.const i32x4 0x202_0202 0x202_0202 0x202_0202 0x202_0202)
  )
  (v128.const i8x16
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
  )
)
(assert_return
  (invoke "i8x16.min_s-i8x16.abs"
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
    (v128.const i32x4 0x0 0x0 0x0 0x0)
  )
  (v128.const i8x16
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
  )
)
(assert_return
  (invoke "i8x16.abs-i8x16.min_s"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i8x16
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
  )
)
(assert_return
  (invoke "i8x16.min_u-i8x16.avgr_u"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0x101_0101 0x101_0101 0x101_0101 0x101_0101)
    (v128.const i32x4 0x202_0202 0x202_0202 0x202_0202 0x202_0202)
  )
  (v128.const i8x16
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
  )
)
(assert_return
  (invoke "i8x16.min_u-i8x16.max_u"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0x101_0101 0x101_0101 0x101_0101 0x101_0101)
    (v128.const i32x4 0x202_0202 0x202_0202 0x202_0202 0x202_0202)
  )
  (v128.const i8x16
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
  )
)
(assert_return
  (invoke "i8x16.min_u-i8x16.max_s"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0x101_0101 0x101_0101 0x101_0101 0x101_0101)
    (v128.const i32x4 0x202_0202 0x202_0202 0x202_0202 0x202_0202)
  )
  (v128.const i8x16
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
  )
)
(assert_return
  (invoke "i8x16.min_u-i8x16.min_u"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0x101_0101 0x101_0101 0x101_0101 0x101_0101)
    (v128.const i32x4 0x202_0202 0x202_0202 0x202_0202 0x202_0202)
  )
  (v128.const i8x16
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
  )
)
(assert_return
  (invoke "i8x16.min_u-i8x16.min_s"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0x101_0101 0x101_0101 0x101_0101 0x101_0101)
    (v128.const i32x4 0x202_0202 0x202_0202 0x202_0202 0x202_0202)
  )
  (v128.const i8x16
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
  )
)
(assert_return
  (invoke "i8x16.min_u-i8x16.abs"
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
    (v128.const i32x4 0x0 0x0 0x0 0x0)
  )
  (v128.const i8x16
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
  )
)
(assert_return
  (invoke "i8x16.abs-i8x16.min_u"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i8x16
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
  )
)
(assert_return
  (invoke "i8x16.max_s-i8x16.avgr_u"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0x101_0101 0x101_0101 0x101_0101 0x101_0101)
    (v128.const i32x4 0x202_0202 0x202_0202 0x202_0202 0x202_0202)
  )
  (v128.const i8x16
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
  )
)
(assert_return
  (invoke "i8x16.max_s-i8x16.max_u"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0x101_0101 0x101_0101 0x101_0101 0x101_0101)
    (v128.const i32x4 0x202_0202 0x202_0202 0x202_0202 0x202_0202)
  )
  (v128.const i8x16
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
  )
)
(assert_return
  (invoke "i8x16.max_s-i8x16.max_s"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0x101_0101 0x101_0101 0x101_0101 0x101_0101)
    (v128.const i32x4 0x202_0202 0x202_0202 0x202_0202 0x202_0202)
  )
  (v128.const i8x16
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
  )
)
(assert_return
  (invoke "i8x16.max_s-i8x16.min_u"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0x101_0101 0x101_0101 0x101_0101 0x101_0101)
    (v128.const i32x4 0x202_0202 0x202_0202 0x202_0202 0x202_0202)
  )
  (v128.const i8x16
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
  )
)
(assert_return
  (invoke "i8x16.max_s-i8x16.min_s"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0x101_0101 0x101_0101 0x101_0101 0x101_0101)
    (v128.const i32x4 0x202_0202 0x202_0202 0x202_0202 0x202_0202)
  )
  (v128.const i8x16
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
  )
)
(assert_return
  (invoke "i8x16.max_s-i8x16.abs"
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
    (v128.const i32x4 0x0 0x0 0x0 0x0)
  )
  (v128.const i8x16
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
  )
)
(assert_return
  (invoke "i8x16.abs-i8x16.max_s"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i8x16
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
    0x0
  )
)
(assert_return
  (invoke "i8x16.max_u-i8x16.avgr_u"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0x101_0101 0x101_0101 0x101_0101 0x101_0101)
    (v128.const i32x4 0x202_0202 0x202_0202 0x202_0202 0x202_0202)
  )
  (v128.const i8x16
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
  )
)
(assert_return
  (invoke "i8x16.max_u-i8x16.max_u"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0x101_0101 0x101_0101 0x101_0101 0x101_0101)
    (v128.const i32x4 0x202_0202 0x202_0202 0x202_0202 0x202_0202)
  )
  (v128.const i8x16
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
  )
)
(assert_return
  (invoke "i8x16.max_u-i8x16.max_s"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0x101_0101 0x101_0101 0x101_0101 0x101_0101)
    (v128.const i32x4 0x202_0202 0x202_0202 0x202_0202 0x202_0202)
  )
  (v128.const i8x16
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
  )
)
(assert_return
  (invoke "i8x16.max_u-i8x16.min_u"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0x101_0101 0x101_0101 0x101_0101 0x101_0101)
    (v128.const i32x4 0x202_0202 0x202_0202 0x202_0202 0x202_0202)
  )
  (v128.const i8x16
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
  )
)
(assert_return
  (invoke "i8x16.max_u-i8x16.min_s"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0x101_0101 0x101_0101 0x101_0101 0x101_0101)
    (v128.const i32x4 0x202_0202 0x202_0202 0x202_0202 0x202_0202)
  )
  (v128.const i8x16
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
  )
)
(assert_return
  (invoke "i8x16.max_u-i8x16.abs"
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
    (v128.const i32x4 0x0 0x0 0x0 0x0)
  )
  (v128.const i8x16
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
  )
)
(assert_return
  (invoke "i8x16.abs-i8x16.max_u"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i8x16
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
  )
)
(assert_return
  (invoke "i8x16.avgr_u-i8x16.avgr_u"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0x101_0101 0x101_0101 0x101_0101 0x101_0101)
    (v128.const i32x4 0x202_0202 0x202_0202 0x202_0202 0x202_0202)
  )
  (v128.const i8x16
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
  )
)
(assert_return
  (invoke "i8x16.avgr_u-i8x16.max_u"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0x101_0101 0x101_0101 0x101_0101 0x101_0101)
    (v128.const i32x4 0x202_0202 0x202_0202 0x202_0202 0x202_0202)
  )
  (v128.const i8x16
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
  )
)
(assert_return
  (invoke "i8x16.avgr_u-i8x16.max_s"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0x101_0101 0x101_0101 0x101_0101 0x101_0101)
    (v128.const i32x4 0x202_0202 0x202_0202 0x202_0202 0x202_0202)
  )
  (v128.const i8x16
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
    0x2
  )
)
(assert_return
  (invoke "i8x16.avgr_u-i8x16.min_u"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0x101_0101 0x101_0101 0x101_0101 0x101_0101)
    (v128.const i32x4 0x202_0202 0x202_0202 0x202_0202 0x202_0202)
  )
  (v128.const i8x16
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
  )
)
(assert_return
  (invoke "i8x16.avgr_u-i8x16.min_s"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0x101_0101 0x101_0101 0x101_0101 0x101_0101)
    (v128.const i32x4 0x202_0202 0x202_0202 0x202_0202 0x202_0202)
  )
  (v128.const i8x16
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
  )
)
(assert_return
  (invoke "i8x16.avgr_u-i8x16.abs"
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
    (v128.const i32x4 0x0 0x0 0x0 0x0)
  )
  (v128.const i8x16
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
  )
)
(assert_return
  (invoke "i8x16.abs-i8x16.avgr_u"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i8x16
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
    0x80
  )
)
(assert_return
  (invoke "i8x16.abs-i8x16.abs"
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i8x16
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
    0x1
  )
)
